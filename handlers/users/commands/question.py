from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Command

from handlers.users.user_info import save_project_name_get_user_name
from keyboards.default import done_keyboard
from loader import dp, db
from states.answers import DetailedAnswer


@dp.message_handler(Command("question"))
@dp.message_handler(text="–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
async def send_welcome_message(message: types.Message, state: FSMContext):
    await state.update_data(command="question")
    await state.update_data(table_name="questions")
    await state.update_data(user_tg_username=message.from_user.username)
    message_text = "<b>–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫!</b>\n" \
                   "–û—á–µ–Ω—å —Ä–∞–¥—ã, —á—Ç–æ –í—ã —Ä–µ—à–∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ –∏ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å —Ç—É—Ç üôÇ"\
                   "–ö–∞–∫ —Ç–æ–ª—å–∫–æ –º—ã –æ–±—Ä–∞–±–æ—Ç–∞–µ–º –í–∞—à—É –∑–∞—è–≤–∫—É, –º—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å –í–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è üì≤\n" \
                   "________________________\n" \
                   "<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞</b>"
    await message.answer(message_text, reply_markup=types.ReplyKeyboardRemove())
    await state.set_state("question__get_project_name")


@dp.message_handler(state="question__get_project_name")
async def get_user_name(message: types.Message, state: FSMContext):
    await save_project_name_get_user_name(message, state)


@dp.message_handler(state="question__contact_details")
async def get_user_question_info(message: types.Message, state: FSMContext):
    contact_details = message.text
    await state.update_data(contact_details=contact_details)
    message_text = "–û—Ç–ª–∏—á–Ω–æ!\n\n" \
                   "<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –í–∞—à –≤–æ–ø—Ä–æ—Å –∫–∞–∫ –º–æ–∂–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–µ–µ, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ —Å–º–æ–≥–ª–∏ –ø–æ–º–æ—á—å –í–∞–º</b>\n\n" \
                   "<b><i>–í—ã –º–æ–∂–µ—Ç–µ –ø–∏—Å–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏. " \
                   "–ö–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º ‚Äú–ì–æ—Ç–æ–≤–æ‚Äù " \
                   "–∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –ø—É–Ω–∫—Ç –≤ –º–µ–Ω—é.</i></b>"
    await message.answer(message_text, reply_markup=done_keyboard)
    await state.update_data(action="get_user_question_info")
    await DetailedAnswer.gather_files_and_messages.set()

    state_data = await state.get_data()
    appeal_id = db.add_question_beginning(
        state_data["user_tg_username"], state_data["user_name"],
        state_data["project_name"], state_data["communication_way"],
        contact_details
    )
    await state.update_data(appeal_id=appeal_id)
