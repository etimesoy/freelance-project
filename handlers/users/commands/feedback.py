from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Command

from handlers.users.user_info import add_new_feedback_to_db
from keyboards.default import done_keyboard
from keyboards.default.main_menu import main_keyboard
from keyboards.inline.callback_data import stars_callback, feedback_callback
from keyboards.inline import stars_keyboard
from states.answers import DetailedAnswer
from utils.misc import discount_code_generator, rate_limit
from loader import dp, db


@dp.message_handler(Command("feedback"))
@dp.message_handler(text="–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤")
async def send_welcome_message(message: types.Message, state: FSMContext):
    await state.update_data(command="feedback")
    await state.update_data(table_name="feedbacks")
    await state.update_data(user_tg_username=message.from_user.username)
    await message.answer("""<b>–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫!</b>
–û—á–µ–Ω—å —Ä–∞–¥—ã, —á—Ç–æ –í—ã —Ä–µ—à–∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ –∏ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ üôÇ
–ë—É–¥–µ–º –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ã –∑–∞ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–π –æ—Ç–∑—ã–≤ –æ –Ω–∞—à–µ–π —Ä–∞–±–æ—Ç–µ! 

________________________
<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞</b>""", reply_markup=types.ReplyKeyboardRemove())
    await state.set_state("get_project_name")


@dp.message_handler(state="get_project_name")
async def get_project_name(message: types.Message, state: FSMContext):
    project_name = message.text
    await state.update_data(project_name=project_name)
    await message.answer("–û—Ç–ª–∏—á–Ω–æ!\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫–æ—Ä–æ—Ç–∫–æ –æ—Ü–µ–Ω–∏—Ç–µ —Ä–∞–±–æ—Ç—É –Ω–∞—à–∏—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤",
                         reply_markup=stars_keyboard)
    await state.set_state("get_assessment_of_work")


@dp.callback_query_handler(stars_callback.filter(), state="get_assessment_of_work")
async def get_assessment_of_work(call: types.CallbackQuery, state: FSMContext, callback_data: dict):
    await call.answer()
    await call.message.edit_reply_markup()
    stars_count = callback_data["count"]
    stars = {"1": "1Ô∏è‚É£‚≠êÔ∏è", "2": "2Ô∏è‚É£‚≠êÔ∏è", "3": "3Ô∏è‚É£‚≠êÔ∏è", "4": "4Ô∏è‚É£‚≠êÔ∏è", "5": "5Ô∏è‚É£‚≠êÔ∏èÔ∏è"}
    prefix = f"<i>–í—ã –≤—ã–±—Ä–∞–ª–∏: {stars[stars_count]}</i>\n"
    message_text = prefix + """–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –æ—Ü–µ–Ω–∫—É! <b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–π –æ—Ç–∑—ã–≤ –æ –Ω–∞—à–µ–π —Ä–∞–±–æ—Ç–µ üôÇ
–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å 3 —Ñ–∞–π–ª–∞ –∫ –í–∞—à–∏–º —Å–æ–æ–±—â–µ–Ω–∏—è–º –æ–±—â–∏–º –≤–µ—Å–æ–º –¥–æ 50 –ú–±.

<i>–í—ã –º–æ–∂–µ—Ç–µ –ø–∏—Å–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏. –ö–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º ‚Äú–ì–æ—Ç–æ–≤–æ‚Äù 
–∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –ø—É–Ω–∫—Ç –≤ –º–µ–Ω—é.</i></b>
"""
    await call.message.answer(message_text, reply_markup=done_keyboard)
    await state.update_data(stars_count=stars_count)
    await state.update_data(action="get_feedback")
    await DetailedAnswer.gather_files_and_messages.set()

    state_data = await state.get_data()
    appeal_id = db.add_feedback_beginning(state_data["user_tg_username"], state_data["project_name"], mark=stars_count)
    await state.update_data(appeal_id=appeal_id)


async def send_gratitude_response(message: types.Message, state: FSMContext):
    state_data = await state.get_data()
    stars_count = state_data["stars_count"]
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=[[
        types.InlineKeyboardButton("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data=feedback_callback.new(action="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å")),
        types.InlineKeyboardButton("–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —É–ª—É—á—à–µ–Ω–∏–µ",
                                   callback_data=feedback_callback.new(action="–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —É–ª—É—á—à–µ–Ω–∏–µ"))
    ]])

    if stars_count == "1":
        message_text = "–°–ø–∞—Å–∏–±–æ –∑–∞ –í–∞—à –æ—Ç–∑—ã–≤! –ü–æ–¥—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –º—ã –º–æ–≥–ª–∏ –±—ã —Å–¥–µ–ª–∞—Ç—å, —á—Ç–æ–±—ã –í—ã –æ—Å—Ç–∞–ª–∏—Å—å –¥–æ–≤–æ–ª—å–Ω—ã?"
    elif stars_count == "2":
        message_text = "–°–ø–∞—Å–∏–±–æ –∑–∞ –í–∞—à –æ—Ç–∑—ã–≤! –ü–æ–¥—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –º—ã –º–æ–≥–ª–∏ –±—ã —É–ª—É—á—à–∏—Ç—å, —á—Ç–æ–±—ã –í—ã –æ—Å—Ç–∞–ª–∏—Å—å –¥–æ–≤–æ–ª—å–Ω—ã?"
    elif stars_count == "3":
        message_text = "–°–ø–∞—Å–∏–±–æ –∑–∞ –í–∞—à –æ—Ç–∑—ã–≤! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ, —á—Ç–æ –º—ã –º–æ–∂–µ–º —Å–¥–µ–ª–∞—Ç—å –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞ —Å –í–∞–º–∏?"
    elif stars_count == "4":
        message_text = "–°–ø–∞—Å–∏–±–æ –∑–∞ –í–∞—à –æ—Ç–∑—ã–≤! –ù–∞–¥–µ–µ–º—Å—è –Ω–∞ –¥–∞–ª—å–Ω–µ–π—à–µ–µ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ —Å –í–∞–º–∏!"
    else:  # stars_count == "5"
        message_text = "–°–ø–∞—Å–∏–±–æ –∑–∞ –í–∞—à –æ—Ç–∑—ã–≤! –ë—É–¥–µ–º –∂–¥–∞—Ç—å –¥–∞–ª—å–Ω–µ–π—à–µ–µ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ!"

    if stars_count in ["1", "2", "3"]:
        await message.answer(message_text, reply_markup=keyboard)
        await state.set_state("get_gratitude")
    elif stars_count in ["4", "5"]:
        await message.answer(message_text, reply_markup=main_keyboard)
        await state.reset_state()
        add_new_feedback_to_db(state_data)


@dp.callback_query_handler(feedback_callback.filter(action="–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —É–ª—É—á—à–µ–Ω–∏–µ"),
                           state="get_gratitude")
async def send_suggestions_for_improvements_message(call: types.CallbackQuery, state: FSMContext):
    await call.message.edit_reply_markup()
    await call.message.answer("<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ, —á—Ç–æ –º—ã –º–æ–≥–ª–∏ –±—ã —É–ª—É—á—à–∏—Ç—å üòî</b>",
                              reply_markup=types.ReplyKeyboardRemove())
    await state.set_state("get_suggestions_for_improvements_message")


@rate_limit(limit=180)
@dp.message_handler(state="get_suggestions_for_improvements_message")
async def get_suggestions_for_improvements_message(message: types.Message, state: FSMContext):
    suggestions_for_improvements = message.text
    # TODO: –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –Ω–µ –∏–º–µ–µ—Ç –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∫–∏–¥–æ—á–Ω—ã–π –∫–æ–¥
    discount_code = discount_code_generator()
    state_data = await state.get_data()
    message_text = "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–¥–µ–ª–∏–ª–∏—Å—å —Å –Ω–∞–º–∏\!\n" \
                   "–ú—ã –¥–æ—Ä–æ–∂–∏–º –∫–∞–∂–¥—ã–º –Ω–∞—à–∏–º –∫–ª–∏–µ–Ω—Ç–æ–º –∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–∏—Å–ª—É—à–∞–µ–º—Å—è –∫ –í–∞—à–µ–º—É –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—é\.\n" \
                   "–ú—ã –æ—á–µ–Ω—å —Å–æ–∂–∞–ª–µ–µ–º, —á—Ç–æ –í—ã –Ω–µ –æ—Å—Ç–∞–ª–∏—Å—å –¥–æ–≤–æ–ª—å–Ω—ã –Ω–∞—à–µ–π —Ä–∞–±–æ—Ç–æ–π\. " \
                   "–í –∫–∞—á–µ—Å—Ç–≤–µ –∏–∑–≤–∏–Ω–µ–Ω–∏—è –º—ã —Ö–æ—Ç–∏–º –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –í–∞–º —Å–∫–∏–¥–∫—É –Ω–∞ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∑–∞ –Ω–∞—à–∏–º–∏ —É—Å–ª—É–≥–∞–º–∏\. " \
                   "–ú—ã –≤–µ—Ä–∏–º, —á—Ç–æ –≤—Å–µ –∑–∞—Å–ª—É–∂–∏–≤–∞—é—Ç –≤—Ç–æ—Ä–æ–π —à–∞–Ω—Å\.\n" \
                   "–ü—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –æ–±—Ä–∞—â–µ–Ω–∏–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –í—ã –ø–æ–ª—É—á–∞–ª–∏ —Å–∫–∏–¥–∫—É, –í–∞—à —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∫–∏–¥–∫–∏:\n" \
                   f"`{discount_code}`"
    await message.answer(message_text, reply_markup=main_keyboard, parse_mode=types.ParseMode.MARKDOWN_V2)
    await state.reset_state()
    add_new_feedback_to_db(state_data, discount_code=discount_code, desire=suggestions_for_improvements)


@rate_limit(limit=180)
@dp.callback_query_handler(feedback_callback.filter(action="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"),
                           state="get_gratitude")
async def go_back_to_main_menu(call: types.CallbackQuery, state: FSMContext):
    await call.message.edit_reply_markup()
    state_data = await state.get_data()
    await call.message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=main_keyboard)
    await state.reset_state()
    add_new_feedback_to_db(state_data)
