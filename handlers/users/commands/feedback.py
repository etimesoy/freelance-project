from aiogram import types
from aiogram.dispatcher import FSMContext

from keyboards.default import done_keyboard
from keyboards.default.main_menu import main_keyboard
from keyboards.inline.callback_data import stars_callback, feedback_callback
from keyboards.inline.stars import stars_keyboard
from loader import dp
from states.answers import DetailedAnswer
from utils.misc import discount_code_generator


@dp.message_handler(commands="feedback")
@dp.message_handler(text="–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤")
async def send_welcome_message(message: types.Message, state: FSMContext):
    await message.answer("""<b>–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫!</b>
–û—á–µ–Ω—å —Ä–∞–¥—ã, —á—Ç–æ –í—ã —Ä–µ—à–∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ –∏ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ üôÇ
–ë—É–¥–µ–º –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ã –∑–∞ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–π –æ—Ç–∑—ã–≤ –æ –Ω–∞—à–µ–π —Ä–∞–±–æ—Ç–µ! 

________________________
<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞</b>""")
    await state.set_state("get_project_name")


@dp.message_handler(state="get_project_name")
async def get_project_name(message: types.Message, state: FSMContext):
    await message.answer("–û—Ç–ª–∏—á–Ω–æ!\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫–æ—Ä–æ—Ç–∫–æ –æ—Ü–µ–Ω–∏—Ç–µ —Ä–∞–±–æ—Ç—É –Ω–∞—à–∏—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤",
                         reply_markup=stars_keyboard)
    await state.set_state("get_assessment_of_work")


@dp.callback_query_handler(stars_callback.filter(), state="get_assessment_of_work")
async def get_assessment_of_work(call: types.CallbackQuery, state: FSMContext, callback_data: dict):
    await call.answer()
    await call.message.answer("""–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –æ—Ü–µ–Ω–∫—É! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–π –æ—Ç–∑—ã–≤ –æ –Ω–∞—à–µ–π —Ä–∞–±–æ—Ç–µ üôÇ
–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–∞–π–ª—ã –∫ –í–∞—à–∏–º —Å–æ–æ–±—â–µ–Ω–∏—è–º.

–í—ã –º–æ–∂–µ—Ç–µ –ø–∏—Å–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏. –ö–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º ‚Äú–ì–æ—Ç–æ–≤–æ‚Äù –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –ø—É–Ω–∫—Ç –≤ –º–µ–Ω—é.
""", reply_markup=done_keyboard)
    await state.update_data(stars_count=callback_data["count"])
    await state.update_data(action="get_feedback")
    await DetailedAnswer.first_answer.set()


async def send_gratitude_response(message: types.Message, state: FSMContext):
    await state.set_state("get_gratitude")
    stars_count = (await state.get_data())["stars_count"]
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=[
        [
            types.InlineKeyboardButton("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data=feedback_callback.new(action="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å")),
            types.InlineKeyboardButton("–ü–æ–ª—É—á–∏—Ç—å —Å–∫–∏–¥–∫—É", callback_data=feedback_callback.new(action="–ü–æ–ª—É—á–∏—Ç—å —Å–∫–∏–¥–∫—É"))
        ],
        [
            types.InlineKeyboardButton("–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —É–ª—É—á—à–µ–Ω–∏–µ", callback_data=feedback_callback.new(action="–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —É–ª—É—á—à–µ–Ω–∏–µ"))
        ]
    ])
    if stars_count == "1":
        await message.answer("–°–ø–∞—Å–∏–±–æ –∑–∞ –í–∞—à –æ—Ç–∑—ã–≤! –ü–æ–¥—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –º—ã –º–æ–≥–ª–∏ –±—ã —Å–¥–µ–ª–∞—Ç—å, —á—Ç–æ–±—ã –í—ã –æ—Å—Ç–∞–ª–∏—Å—å –¥–æ–≤–æ–ª—å–Ω—ã?",
                             reply_markup=keyboard)
    elif stars_count == "2":
        await message.answer("–°–ø–∞—Å–∏–±–æ –∑–∞ –í–∞—à –æ—Ç–∑—ã–≤! –ü–æ–¥—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –º—ã –º–æ–≥–ª–∏ –±—ã —É–ª—É—á—à–∏—Ç—å, —á—Ç–æ–±—ã –í—ã –æ—Å—Ç–∞–ª–∏—Å—å –¥–æ–≤–æ–ª—å–Ω—ã?",
                             reply_markup=keyboard)
    elif stars_count == "3":
        await message.answer("–°–ø–∞—Å–∏–±–æ –∑–∞ –í–∞—à –æ—Ç–∑—ã–≤! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ, —á—Ç–æ –º—ã –º–æ–∂–µ–º —Å–¥–µ–ª–∞—Ç—å –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞ —Å –í–∞–º–∏?",
                             reply_markup=keyboard)
    elif stars_count == "4":
        await message.answer("–°–ø–∞—Å–∏–±–æ –∑–∞ –í–∞—à –æ—Ç–∑—ã–≤! –ù–∞–¥–µ–µ–º—Å—è –Ω–∞ –¥–∞–ª—å–Ω–µ–π—à–µ–µ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ —Å –í–∞–º–∏!",
                             reply_markup=main_keyboard)
        await state.reset_state()
    elif stars_count == "5":
        await message.answer("–°–ø–∞—Å–∏–±–æ –∑–∞ –í–∞—à –æ—Ç–∑—ã–≤! –ë—É–¥–µ–º –∂–¥–∞—Ç—å –¥–∞–ª—å–Ω–µ–π—à–µ–µ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ!",
                             reply_markup=main_keyboard)
        await state.reset_state()


@dp.callback_query_handler(feedback_callback.filter(action="–ü–æ–ª—É—á–∏—Ç—å —Å–∫–∏–¥–∫—É"),
                           state="get_gratitude")
async def send_discount_code(call: types.CallbackQuery, state: FSMContext):
    await call.message.edit_reply_markup()
    discount_code = discount_code_generator()
    await call.message.answer(f"""–ú—ã –æ—á–µ–Ω—å —Å–æ–∂–∞–ª–µ–µ–º, —á—Ç–æ –í—ã –Ω–µ –æ—Å—Ç–∞–ª–∏—Å—å –¥–æ–≤–æ–ª—å–Ω—ã –Ω–∞—à–µ–π —Ä–∞–±–æ—Ç–æ–π\. –í –∫–∞—á–µ—Å—Ç–≤–µ –∏–∑–≤–∏–Ω–µ–Ω–∏—è –º—ã —Ö–æ—Ç–∏–º –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –í–∞–º —Å–∫–∏–¥–∫—É –Ω–∞ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∑–∞ –Ω–∞—à–∏–º–∏ —É—Å–ª—É–≥–∞–º–∏\. –ú—ã –≤–µ—Ä–∏–º, —á—Ç–æ –≤—Å–µ –∑–∞—Å–ª—É–∂–∏–≤–∞—é—Ç –≤—Ç–æ—Ä–æ–π —à–∞–Ω—Å\.
–ü—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –æ–±—Ä–∞—â–µ–Ω–∏–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –í—ã –ø–æ–ª—É—á–∞–ª–∏ —Å–∫–∏–¥–∫—É, –í–∞—à —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∫–∏–¥–∫–∏:
`{discount_code}`""", reply_markup=main_keyboard, parse_mode=types.ParseMode.MARKDOWN_V2)
    # TODO: —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–∫–∏–¥–æ—á–Ω—ã–π –∫–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–¥
    await state.reset_state()


@dp.callback_query_handler(feedback_callback.filter(action="–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —É–ª—É—á—à–µ–Ω–∏–µ"),
                           state="get_gratitude")
async def send_suggestions_for_improvements_message(call: types.CallbackQuery, state: FSMContext):
    await call.message.edit_reply_markup()
    await call.message.answer("<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ, —á—Ç–æ –º—ã –º–æ–≥–ª–∏ –±—ã —É–ª—É—á—à–∏—Ç—å üòî</b>")
    await state.set_state("get_suggestions_for_improvements_message")


@dp.message_handler(state="get_suggestions_for_improvements_message")
async def get_suggestions_for_improvements_message(message: types.Message, state: FSMContext):
    await message.answer("""–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–¥–µ–ª–∏–ª–∏—Å—å —Å –Ω–∞–º–∏!
–ú—ã –¥–æ—Ä–æ–∂–∏–º –∫–∞–∂–¥—ã–º –Ω–∞—à–∏–º –∫–ª–∏–µ–Ω—Ç–æ–º –∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–∏—Å–ª—É—à–∞–µ–º—Å—è –∫ –í–∞—à–µ–º—É –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—é.""",
                         reply_markup=main_keyboard)
    await state.reset_state()


@dp.callback_query_handler(feedback_callback.filter(action="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"),
                           state="get_gratitude")
async def go_back_to_main_menu(call: types.CallbackQuery, state: FSMContext):
    await call.message.edit_reply_markup()
    await call.message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=main_keyboard)
    await state.reset_state()
